on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - master

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install Dependencies
        run: sudo apt-get install -y genisoimage
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Get Maven version
        run: echo "::set-env name=VERSION::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
      - name: Upload Tracks
        id: upload-tracks
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: shared/target/tracks.zip
          asset_name: tracks.zip
          asset_content_type: application/zip
      - name: Upload Server Jar
        id: upload-server-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: server/target/server-${{ env.VERSION }}.jar
          asset_name: server-${{ env.VERSION }}.jar
          asset_content_type: application/jar
      - name: Upload Editor Jar
        id: upload-editor-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: editor/target/editor-${{ env.VERSION }}.jar
          asset_name: editor-${{ env.VERSION }}.jar
          asset_content_type: application/jar
      - name: Upload Client Jar
        id: upload-client-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: client/target/client-${{ env.VERSION }}.jar
          asset_name: client-${{ env.VERSION }}.jar
          asset_content_type: application/jar
      - name: Upload Client exe
        id: upload-client-exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/target/client-${{ env.VERSION }}.exe
          asset_name: client-${{ env.VERSION }}.exe
          asset_content_type: application/exe
      - name: Upload Client dmg
        id: upload-client-dmg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/target/client-${{ env.VERSION }}.dmg
          asset_name: client-${{ env.VERSION }}.dmg
          asset_content_type: application/octet-stream